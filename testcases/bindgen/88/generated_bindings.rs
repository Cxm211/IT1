/* automatically generated by rust-bindgen 0.71.1 */

#[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
pub mod root {
    #[allow(unused_imports)]
    use self::super::root;
    pub mod Halide {
        #[allow(unused_imports)]
        use self::super::super::root;
        #[repr(C)]
        #[derive(Debug, Copy, Clone)]
        pub struct Type {
            pub _address: u8,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}__ZN6Halide4Type1bE"]
            pub static mut Type_b: root::a;
        }
        #[allow(clippy::unnecessary_operation, clippy::identity_op)]
        const _: () = {
            ["Size of Type"][::std::mem::size_of::<Type>() - 1usize];
            ["Alignment of Type"][::std::mem::align_of::<Type>() - 1usize];
        };
    }
    pub type a = ::std::os::raw::c_uint;
}
