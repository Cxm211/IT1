/* automatically generated by rust-bindgen 0.71.1 */

#[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
pub mod root {
    #[allow(unused_imports)]
    use self::super::root;
    pub mod std {
        #[allow(unused_imports)]
        use self::super::super::root;
        pub type string = u8;
    }
    pub mod octave {
        #[allow(unused_imports)]
        use self::super::super::root;
        #[repr(C)]
        #[derive(Debug, Copy, Clone)]
        pub struct b {
            pub c: root::std::string,
        }
        #[allow(clippy::unnecessary_operation, clippy::identity_op)]
        const _: () = {
            ["Size of b"][::std::mem::size_of::<b>() - 1usize];
            ["Alignment of b"][::std::mem::align_of::<b>() - 1usize];
            ["Offset of field: b::c"][::std::mem::offset_of!(b, c) - 0usize];
        };
    }
}
