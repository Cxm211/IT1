/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Base {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Base"][::std::mem::size_of::<Base>() - 1usize];
    ["Alignment of Base"][::std::mem::align_of::<Base>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CallArgsBase<BaseT> {
    pub _phantom_0: ::std::marker::PhantomData<::std::cell::UnsafeCell<BaseT>>,
    pub _base: BaseT,
    pub c: *mut ::std::os::raw::c_int,
    pub d: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CallArgs {
    pub _base: CallArgsBase<Base>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of CallArgs"][::std::mem::size_of::<CallArgs>() - 16usize];
    ["Alignment of CallArgs"][::std::mem::align_of::<CallArgs>() - 8usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of template specialization: CallArgsBase_open0_Base_close0"]
        [::std::mem::size_of::<CallArgsBase<Base>>() - 16usize];
    ["Align of template specialization: CallArgsBase_open0_Base_close0"]
        [::std::mem::align_of::<CallArgsBase<Base>>() - 8usize];
};