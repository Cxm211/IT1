/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
pub struct Parent__bindgen_vtable(::std::os::raw::c_void);
#[repr(C)]
#[derive(Debug)]
pub struct Parent {
    pub vtable_: *const Parent__bindgen_vtable,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Parent"][::std::mem::size_of::<Parent>() - 8usize];
    ["Alignment of Parent"][::std::mem::align_of::<Parent>() - 8usize];
};
unsafe extern "C" {
    #[link_name = "\u{1}__ZN6ParentD1Ev"]
    pub fn Parent_Parent_destructor(this: *mut Parent);
}
#[repr(C)]
#[derive(Debug)]
pub struct Child {
    pub _base: Parent,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Child"][::std::mem::size_of::<Child>() - 8usize];
    ["Alignment of Child"][::std::mem::align_of::<Child>() - 8usize];
};
unsafe extern "C" {
    #[link_name = "\u{1}__ZN5ChildC1Ev"]
    pub fn Child_Child(this: *mut Child);
}
impl Child {
    #[inline]
    pub unsafe fn new() -> Self {
        let mut __bindgen_tmp = ::std::mem::MaybeUninit::uninit();
        Child_Child(__bindgen_tmp.as_mut_ptr());
        __bindgen_tmp.assume_init()
    }
}
unsafe extern "C" {
    #[link_name = "\u{1}__ZN5ChildD1Ev"]
    pub fn Child_Child_destructor(this: *mut Child);
}
